Index: eidgui/AutoUpdates.cpp
===================================================================
--- eidgui/AutoUpdates.cpp	(revision 3875)
+++ eidgui/AutoUpdates.cpp	(working copy)
@@ -21,6 +21,13 @@
 
 #include <QtGui>
 #include <QtNetwork>
+#include <QProgressDialog>
+#include <QPushButton>
+#include <QMessageBox>
+#include <QDialogButtonBox>
+#include <QHBoxLayout>
+#include <QVBoxLayout>
+#include <QLabel>
 
 #include <fstream>
 #include <sstream>
Index: eidgui/PDFSignWindow.cpp
===================================================================
--- eidgui/PDFSignWindow.cpp	(revision 3875)
+++ eidgui/PDFSignWindow.cpp	(working copy)
@@ -22,6 +22,8 @@
 #include <QListView>
 #include <QComboBox>
 #include <QFileDialog>
+#include <QMessageBox>
+#include <QtConcurrent>
 #include <QProgressDialog>
 #include <QTextStream>
 #include <QPainter>
@@ -813,7 +815,7 @@
 	if (value && m_pdf_sig)
 	{
 		// clearAllSectors();
-         QString sectors = QString::fromAscii(m_pdf_sig->getOccupiedSectors(1));
+         QString sectors = QString::fromLatin1(m_pdf_sig->getOccupiedSectors(1));
          highlightSectors(sectors);
 
 	}
@@ -826,7 +828,7 @@
 	{
          clearAllSectors();
          QString sectors =
-            QString::fromAscii(m_pdf_sig->getOccupiedSectors(m_current_page_number));
+            QString::fromLatin1(m_pdf_sig->getOccupiedSectors(m_current_page_number));
          highlightSectors(sectors);
 	}
 
@@ -839,7 +841,7 @@
 		return;
      clearAllSectors();
 
-     QString sectors = QString::fromAscii(m_pdf_sig->getOccupiedSectors(new_value));
+     QString sectors = QString::fromLatin1(m_pdf_sig->getOccupiedSectors(new_value));
      highlightSectors(sectors);
 
 }
@@ -915,7 +917,7 @@
  	QList<QGraphicsItem *> scene_items = this->items();
 
 	int i = 0;
-    QGraphicsItem *it = this->itemAt(selected_pos);
+    QGraphicsItem *it = this->itemAt(selected_pos, QTransform());
     ((PDFSignWindow*)parent)->setSelectedSector(((SelectableRectangle *)it)->getSectorNumber());
 	while (i!= scene_items.size())
 	{
@@ -1326,7 +1328,7 @@
 	//Set the spinbox with the appropriate max value
 	ui.spinBox_page->setMaximum(*std::min_element(page_numbers.begin(), page_numbers.end()));
 
-	// QString sectors = QString::fromAscii(m_pdf_sig->getOccupiedSectors(1));
+	// QString sectors = QString::fromLatin1(m_pdf_sig->getOccupiedSectors(1));
 	// highlightSectors(sectors);
 
 	//Enable sign button now that we have data and a card inserted
Index: eidgui/PDFSignWindow.h
===================================================================
--- eidgui/PDFSignWindow.h	(revision 3875)
+++ eidgui/PDFSignWindow.h	(working copy)
@@ -23,6 +23,8 @@
 
 #include <QDialog>
 #include <QDropEvent>
+#include <QGraphicsItem>
+#include <QProgressDialog>
 #include "ui_PDFSignWindow.h"
 #include "CardInformation.h"
 
Index: eidgui/dlgprint.cpp
===================================================================
--- eidgui/dlgprint.cpp	(revision 3875)
+++ eidgui/dlgprint.cpp	(working copy)
@@ -27,6 +27,11 @@
 #include <QStyleOption>
 #include <QPen>
 #include <QFontDatabase>
+#include <QPrintDialog>
+#include <QProgressDialog>
+#include <QDesktopWidget>
+#include <QFileDialog>
+#include <QtConcurrent>
 
 #include "dlgprint.h"
 #include "eidlib.h"
@@ -105,12 +110,12 @@
 	child->move(centerparent);
 }
 
-/* For filenames we need to maintain latin-1 or UTF-8 native encoding */
-//This macro's argument is a QString
-#ifdef _WIN32
-#define getPlatformNativeString(s) s.toStdString().c_str()
-#else
-#define getPlatformNativeString(s) s.toUtf8().constData()
+/* For filenames we need to maintain latin-1 or UTF-8 native encoding */
+//This macro's argument is a QString
+#ifdef _WIN32
+#define getPlatformNativeString(s) s.toStdString().c_str()
+#else
+#define getPlatformNativeString(s) s.toUtf8().constData()
 #endif
 
 bool SignPDF_wrapper(PTEID_EIDCard * card, const char * file_to_sign, QString &outputsign)
Index: eidgui/dlgprint.h
===================================================================
--- eidgui/dlgprint.h	(revision 3875)
+++ eidgui/dlgprint.h	(working copy)
@@ -23,6 +23,7 @@
 
 #include "ui_dlgPrint.h"
 #include <QDialog>
+#include <QProgressDialog> 
 #include "genpur.h"
 #include "CardInformation.h"
 
Index: eidgui/dlgsignature.cpp
===================================================================
--- eidgui/dlgsignature.cpp	(revision 3875)
+++ eidgui/dlgsignature.cpp	(working copy)
@@ -23,6 +23,11 @@
 
 #include <QListView>
 #include <QFileInfo>
+#include <QFileDialog>
+#include <QtConcurrent>
+#include <QtConcurrent>
+#include <QDesktopWidget>
+#include <QProgressDialog>
 #include <QDir>
 
 #include <fstream>
@@ -293,27 +298,27 @@
 			keepTrying = false;
 
 		}
-		catch (PTEID_Exception &e)
-		{
-			this->error_code = e.GetError();
-			PTEID_LOG(PTEID_LOG_LEVEL_ERROR, "eidgui", "Caught exception in SignXades*() method. Error code: 0x%08x\n", 
-				(unsigned int)e.GetError());
-
-			if (e.GetError() == EIDMW_ERR_CARD_RESET)
-			{
-				PTEID_EIDCard &new_card = getNewCard();
-				card = &new_card;
-
-			}
-			else
-				keepTrying = false;
-		}
-	}
+		catch (PTEID_Exception &e)
+		{
+			this->error_code = e.GetError();
+			PTEID_LOG(PTEID_LOG_LEVEL_ERROR, "eidgui", "Caught exception in SignXades*() method. Error code: 0x%08x\n", 
+				(unsigned int)e.GetError());
+
+			if (e.GetError() == EIDMW_ERR_CARD_RESET)
+			{
+				PTEID_EIDCard &new_card = getNewCard();
+				card = &new_card;
+
+			}
+			else
+				keepTrying = false;
+		}
+	}
 	while(keepTrying);
 	return;
 }
 
-PTEID_EIDCard& dlgSignature::getNewCard()
+PTEID_EIDCard& dlgSignature::getNewCard()
 {
 		unsigned long	ReaderStartIdx = m_selected_reader;
 		bool			bRefresh	   = false;
@@ -339,12 +344,12 @@
 						PTEID_EIDCard& Card = ReaderContext.getEIDCard();
 						return Card;
 						
-					}
-					catch (PTEID_ExCardBadType const& e) {
-
-					}
-			}
-		}
+					}
+					catch (PTEID_ExCardBadType const& e) {
+
+					}
+			}
+		}
 }
 
 
Index: eidgui/dlgsignature.h
===================================================================
--- eidgui/dlgsignature.h	(revision 3875)
+++ eidgui/dlgsignature.h	(working copy)
@@ -26,6 +26,7 @@
 
 #include "ui_dlgSignature.h"
 #include <QDialog>
+#include <QProgressDialog>
 #include "genpur.h"
 #include "CardInformation.h"
 #include "mylistview.h"
Index: eidgui/eidgui.pro
===================================================================
--- eidgui/eidgui.pro	(revision 3875)
+++ eidgui/eidgui.pro	(working copy)
@@ -12,6 +12,8 @@
 macx: ICON = appicon.icns
 
 QT += network
+QT += concurrent
+QT += x11extras
 
 message("Compile $$TARGET")
 
@@ -33,6 +35,10 @@
 ### Compiler setup
 ###
 
+QT += widgets
+## For QtPrinter class
+QT += printsupport
+
 CONFIG -= warn_on
 CONFIG += config qt thread create_prl link_prl console
 
@@ -115,9 +121,8 @@
 					 Settings.h \
 					 genpur.h \
 					 picturepopup.h \
-					 qtsingleapplication.h \
+					# qtsingleapplication.h \
 					 dlgprint.h \
-					 dlgverifysignature.h \
 					 mylistview.h \
 					 dlgsignature.h \
 					 PDFSignWindow.h \
@@ -138,15 +143,14 @@
            main.cpp \
            mainwnd.cpp \
 		   dlgprint.cpp \
-		   dlgverifysignature.cpp \
 		   dlgsignature.cpp \
-			picturepopup.cpp \
-			qtsingleapplication.cpp \
+		   picturepopup.cpp \
+		   #qtsingleapplication.cpp \
 					 PDFSignWindow.cpp \
 					 mylistview.cpp \
 					 genpur.cpp
-unix:!macx: SOURCES += qtsingleapplication_x11.cpp
-macx: SOURCES += qtsingleapplication_mac.cpp	
+#unix:!macx: SOURCES += qtsingleapplication_x11.cpp
+#macx: SOURCES += qtsingleapplication_mac.cpp	
 
 
 
Index: eidgui/httpwindow.cpp
===================================================================
--- eidgui/httpwindow.cpp	(revision 3875)
+++ eidgui/httpwindow.cpp	(working copy)
@@ -17,6 +17,7 @@
  * http://www.gnu.org/licenses/.
  *
  * Author: Luis Medinas <luis.medinas@caixamagica.pt>
+ * Author: Andre Guerreiro <andre.guerreiro@caixamagica.pt>
  **************************************************************************** */
 
 #include <iostream>
@@ -24,6 +25,9 @@
 
 #include <QtGui>
 #include <QtNetwork>
+#include <QDialogButtonBox> 
+#include <QVBoxLayout>
+#include <QHBoxLayout>
 
 #include "httpwindow.h"
 #include "eidlib.h"
Index: eidgui/main.cpp
===================================================================
--- eidgui/main.cpp	(revision 3875)
+++ eidgui/main.cpp	(working copy)
@@ -24,9 +24,9 @@
 #endif
 
 #include <iostream>
-#include "qtsingleapplication.h"
 
 #include "Settings.h"
+//#include "qtsingleapplication.h"
 #include "mainwnd.h"
 
 #ifdef MEMORY_LEAKS_CHECK
@@ -36,6 +36,8 @@
 	#endif
 #endif
 
+
+/*
 class MyApplication : public QtSingleApplication
 {
 public:
@@ -78,6 +80,7 @@
 #endif
 };
 
+*/
 
 int main(int argc, char *argv[])
 {
@@ -103,7 +106,9 @@
 		}
 	}
 
-	MyApplication instance("eidgui", argc, argv);
+	QApplication instance(argc, argv);
+
+	/*
 	PTEID_LOG(PTEID_LOG_LEVEL_DEBUG, "eidgui", "Waking up other instance");
 	if (instance.sendMessage("Wake up!"))
 	{
@@ -123,6 +128,7 @@
 
 	PTEID_LOG(PTEID_LOG_LEVEL_DEBUG, "eidgui", "Wake up did not respond");
 	instance.initialize();
+	*/
 
 	PTEID_InitSDK();
 
@@ -138,10 +144,10 @@
 	// main application. In this way, the 'wake up' message emitted by each starting instance
 	// will make the running instance to restore.
 	//-------------------------------------------------
-	QObject::connect(&instance, SIGNAL(messageReceived(const QString&)),
-		&widget, SLOT(messageRespond(const QString&)));
+	//QObject::connect(&instance, SIGNAL(messageReceived(const QString&)),
+	//	&widget, SLOT(messageRespond(const QString&)));
 
-	
+	/*
 #ifndef __MACH__	
 	if ( (argc >= 2) && (strcmp(argv[1],"/startup")!=0) && (argv[1] != NULL) )
 	{
@@ -151,12 +157,13 @@
 		instance.sendMessage( (const QString)openFile );
 	}
 #endif
+*/
 	if (!settings.getStartMinimized())
 	{
 		widget.show();
 	}
 
-	instance.setActivationWindow ( &widget );
+	//instance.setActivationWindow ( &widget );
 
 	iRetValue = instance.exec();
 
Index: eidgui/mainwnd.cpp
===================================================================
--- eidgui/mainwnd.cpp	(revision 3875)
+++ eidgui/mainwnd.cpp	(working copy)
@@ -2,6 +2,7 @@
 
  * eID Middleware Project.
  * Copyright (C) 2008-2010 FedICT.
+ * Copyright (C) 2011-2015 Caixa Magica Software.
  *
  * This is free software; you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License version
@@ -21,8 +22,11 @@
 #include <sstream>
 #include <QThread>
 #include <QtGui>
+#include <QMenu>
 #include <QFileDialog>
 #include <QApplication>
+#include <QPrintDialog>
+#include <QtConcurrent>
 #include <QEvent>
 #include <QPixmap>
 #include <QImage>
@@ -41,7 +45,6 @@
 #include "mainwnd.h"
 #include "dlgAbout.h"
 #include "dlgprint.h"
-#include "dlgverifysignature.h"
 #include "ChangeAddressDialog.h"
 #include "PDFSignWindow.h"
 #include "dlgsignature.h"
@@ -4158,7 +4161,7 @@
 					setEnabledCertifButtons(false);
 					enableFileSave(false);
 
-					m_imgPicture = NULL;
+					m_imgPicture = QPixmap();
 					m_pinsInfo.clear();
 					m_CI_Data.Reset();
 
Index: eidgui/mainwnd.h
===================================================================
--- eidgui/mainwnd.h	(revision 3875)
+++ eidgui/mainwnd.h	(working copy)
@@ -24,6 +24,10 @@
 #include <map>
 #include <QtGui>
 #include <QFutureWatcher>
+#include <QSystemTrayIcon>
+#include <QProgressDialog>
+#include <QPrinter>
+#include <QMessageBox>
 #ifdef WIN32
 #include <windows.h>
 #include <Wincrypt.h>
Index: eidgui/qtsingleapplication.cpp
===================================================================
--- eidgui/qtsingleapplication.cpp	(revision 3875)
+++ eidgui/qtsingleapplication.cpp	(working copy)
@@ -19,13 +19,12 @@
 **
 ****************************************************************************/
 #include "qtsingleapplication.h"
-#include <QtGui/QWidget>
+#include <QWidget>
 
-#include <QtGui/QApplication>
-#include <QtGui/QImage>
-#include <QtGui/QLabel>
-#include <QtGui/QPixmap>
-#include <QtGui>
+#include <QApplication>
+#include <QImage>
+#include <QLabel>
+#include <QPixmap>
 
 
 class QtSingletonPrivate
@@ -118,10 +117,10 @@
     \warning On X11 type can not be QApplication::Tty.
 
 */
-QtSingleApplication::QtSingleApplication(const QString &id, int &argc, char **argv, Type type)
-    : QApplication(argc, argv, type)
+QtSingleApplication::QtSingleApplication(const QString &id, int &argc, char **argv)
+    : QApplication(argc, argv)
 {
-#ifdef Q_WS_X11
+#ifdef Q_OS_LINUX
     Q_ASSERT_X(type != Tty, "QtSingleApplication::QtSingleApplication",
                "QApplication::Tty cannot be used with QtSingleApplication on X11");
 #endif
@@ -132,7 +131,7 @@
     sysInit();
 }
 
-#ifdef Q_WS_X11
+#ifdef Q_OS_LINUX
 
 /*!
     Creates a QtSingleApplication object, given an already open display
@@ -161,7 +160,7 @@
     sysInit();
 }
 
-#endif // Q_WS_X11
+#endif // Q_OS_LINUX
 
 
 /*!
Index: eidgui/qtsingleapplication.h
===================================================================
--- eidgui/qtsingleapplication.h	(revision 3875)
+++ eidgui/qtsingleapplication.h	(working copy)
@@ -21,8 +21,12 @@
 #ifndef QTSINGLEAPPLICATION_H
 #define QTSINGLEAPPLICATION_H
 
-#include <QtGui/QApplication>
-#ifdef Q_WS_MAC
+#ifdef Q_OS_LINUX
+#include <X11/Xlib.h>
+#endif
+
+#include <QApplication>
+#ifdef Q_OS_MAC
 #include <CoreFoundation/CoreFoundation.h>
 #endif
 
@@ -30,7 +34,7 @@
 class QtSingletonSysPrivate;
 class QWidget;
 
-#if defined(Q_WS_WIN)
+#if defined(Q_OS_WIN)
 #  if !defined(QT_QTSINGLEAPPLICATION_EXPORT) && !defined(QT_QTSINGLEAPPLICATION_IMPORT)
 #    define QT_QTSINGLEAPPLICATION_EXPORT
 #  elif defined(QT_QTSINGLEAPPLICATION_IMPORT)
@@ -50,8 +54,8 @@
 {
     Q_OBJECT
 public:
-    QtSingleApplication(const QString &id, int &argc, char **argv, Type = GuiClient);
-#ifdef Q_WS_X11
+    QtSingleApplication(const QString &id, int &argc, char **argv);
+#ifdef Q_OS_LINUX
     QtSingleApplication(Display* dpy, const QString &id, int &argc, char **argv, Qt::HANDLE visual = 0, Qt::HANDLE colormap = 0);
 #endif
     ~QtSingleApplication();
@@ -64,7 +68,7 @@
     QWidget* activationWindow() const;
 
 protected:
-#if defined(Q_WS_X11)
+#if defined(Q_OS_LINUX)
     bool x11EventFilter(XEvent *msg);
 #endif
 
@@ -77,7 +81,7 @@
 
 private:
     friend class QtSingletonSysPrivate;
-#ifdef Q_WS_MAC
+#ifdef Q_OS_MAC
     friend CFDataRef MyCallBack(CFMessagePortRef, SInt32, CFDataRef, void *);
 #endif
     QtSingletonPrivate *d;
Index: eidgui/qtsingleapplication_win.cpp
===================================================================
--- eidgui/qtsingleapplication_win.cpp	(revision 3875)
+++ eidgui/qtsingleapplication_win.cpp	(working copy)
@@ -20,7 +20,7 @@
 ****************************************************************************/
 #include "qtsingleapplication.h"
 #include <qt_windows.h>
-#include <QtGui/QWidget>
+#include <QWidget>
 
 class QtSingletonSysPrivate : public QWidget
 {
Index: eidgui/qtsingleapplication_x11.cpp
===================================================================
--- eidgui/qtsingleapplication_x11.cpp	(revision 3875)
+++ eidgui/qtsingleapplication_x11.cpp	(working copy)
@@ -19,19 +19,19 @@
 **
 ****************************************************************************/
 #include "qtsingleapplication.h"
-#include <QtGui/QWidget>
-#include <QtCore/QByteArray>
-#include <QtCore/QString>
-#include <QtCore/QList>
-#include <QtGui/QDesktopWidget>
-#include <QtGui/QApplication>
-#include <QtCore/QDebug>
+#include <QWidget>
+#include <QByteArray>
+#include <QString>
+#include <QList>
+#include <QDesktopWidget>
+#include <QApplication>
+#include <QDebug>
 #include <unistd.h>
 #include <pwd.h>
 #include <sys/types.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
-#include <QtGui/QX11Info>
+#include <QX11Info>
 
 
 class QtSingletonListener : public QWidget
@@ -100,7 +100,7 @@
                                  win,
                                  sel,
                                  0L, length,
-                                 False,
+                                 false,
                                  typ,
                                  &actualType,
                                  &actualFormat,
@@ -109,7 +109,7 @@
                                  reinterpret_cast<unsigned char **>(data));
         if (ret == Success && actualType == typ && *nitems > 0) {
             if (bafter == 0)
-                return TRUE;
+                return true;
             else {
                 if (actualFormat == 8)
                     length += (bafter / 4) + 1;
@@ -121,12 +121,12 @@
         } else {
             if (*nitems > 0 && *data != 0)
                 XFree(*data);
-            return FALSE;
+            return false;
         }
         if (*nitems > 0 && *data != 0)
             XFree(*data);
     }
-    return FALSE;
+    return false;
 }
 
 void QtSingletonSysPrivate::findWindows(QList<Window> &windows)
@@ -236,13 +236,13 @@
     QByteArray login = sysd->toXPCS(id()+sysd->login());
     sysd->selAtom = XInternAtom(QX11Info::display(),
 				login,
-				False);
+				false);
     sysd->typAtom = XInternAtom(QX11Info::display(),
 				"_QTSINGLEAPPLICATION",
-				False);
+				false);
     sysd->listenAtom = XInternAtom(QX11Info::display(),
                                    login+"_LISTENER",
-                                   False);
+                                   false);
 
     if (sysd->selAtom != None) {
 	sysd->listener = new QtSingletonListener(sysd->listenAtom);
@@ -265,7 +265,7 @@
     QByteArray login = sysd->toXPCS(id()+sysd->login());
     Atom tmp = XInternAtom(QX11Info::display(),
 			   login,
-			   True);
+			   true);
 
     if (tmp != None) {
 	WId wid = XGetSelectionOwner(QX11Info::display(),
@@ -272,7 +272,7 @@
 				     tmp);
 	return (wid != None);
     }
-    return FALSE;
+    return false;
 }
 
 bool QtSingleApplication::sendMessage(const QString &message, int)
@@ -280,20 +280,20 @@
     QByteArray login = sysd->toXPCS(id()+sysd->login());
     Atom sel = XInternAtom(QX11Info::display(),
                            login,
-                           True);
+                           true);
     if (sel == None)
-        return FALSE;
+        return false;
     WId wid = XGetSelectionOwner(QX11Info::display(), sel);
     if (wid != None) {
 	Atom typ = XInternAtom(QX11Info::display(),
 				"_QTSINGLEAPPLICATION",
-				True);
+				true);
         if (typ != None) {
             sysd->sendMessageTo(wid, sel, typ, message);
-            return TRUE;
+            return true;
         }
     }
-    return FALSE;
+    return false;
 }
 
 /*!
@@ -319,7 +319,7 @@
                                        CurrentTime);
                     if (XGetSelectionOwner(QX11Info::display(), sysd->selAtom) == lid)
                         sysd->owner = true;
-                    return TRUE;
+                    return true;
                 }
                 char* data = 0;
                 unsigned long nitems = 0;
@@ -330,7 +330,7 @@
                         XFree(data);
                     emit messageReceived(str);
 
-                    return TRUE;
+                    return true;
                 }
                 if (data)
                     XFree(data);
Index: dialogs/dialogsQTsrv/dialogsQTsrv.pro
===================================================================
--- dialogs/dialogsQTsrv/dialogsQTsrv.pro	(revision 3875)
+++ dialogs/dialogsQTsrv/dialogsQTsrv.pro	(working copy)
@@ -24,6 +24,9 @@
 
 CONFIG -= warn_on
 
+#For Qt5
+QT += widgets
+
 DEPENDPATH += .
 INCLUDEPATH += . ../dialogsQT ../../common
 
